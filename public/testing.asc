Chapter 2.  Forces
------------------

[quote]
“Don't underestimate the Force.”
  —Darth Vader

In the final example of Chapter 1, we saw how we could calculate a dynamic acceleration based on a vector pointing from a circle on the screen to the mouse location.   The resulting motion resembled a magnetic attraction between circle and mouse, as if some _force_ were pulling the circle in towards the mouse.  In this chapter we will formalize our understanding of the concept of a *_force_* and its relationship to *_acceleration_*.    Our goal, by the end of this chapter, is to understand how to make multiple objects move around the screen and respond to a variety of environmental forces.

== 2.1 Forces and Newton’s Laws of Motion

We could use the above methodology to create a random walker that tends to move to the right.  Here is an example of a Walker with the following probabilities:

[classname="packed"]
- _chance of moving up: 	20%_
- _chance of moving down: 	20%_
- _chance of moving left: 	20%_
- _chance of moving right: 	40%_


Let’s look at the results with different values for [var]*angleVel*:

image::imgs/chapter03/chapter03_ex09a.png[canvas="processingjs/chapter03/_3_09_wave_a/_3_09_wave_a.pde",classname="three-col",alt="angleVel = 0.05"]
image::imgs/chapter03/chapter03_ex09b.png[canvas="processingjs/chapter03/_3_09_wave_b/_3_09_wave_b.pde",classname="three-col",alt="angleVel = 0.2"]
image::imgs/chapter03/chapter03_ex09c.png[canvas="processingjs/chapter03/_3_09_wave_c/_3_09_wave_c.pde",classname="three-col",alt="angleVel = 0.4"]

Notice how, although we’re not precisely computing the period of the wave, the higher the angular velocity, the shorter the period.  It’s also worth noting that as the period becomes shorter, it becomes more and more difficult to make out the wave itself as the distance between the individual points increases.  One option we have is to use [function]*beginShape()* and [function]*endShape()* to connect the points with a line.